/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.ConnectionDB;
import Controllers.SetWallpaper;
import Controllers.Settings;
import Views.NhanVien.PanelNewNhanVienFirst;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author Huy Thắng
 */
public class PanelLoading extends javax.swing.JFrame {

    ConnectionDB con;
    Connection conn;
    private Timer objTimer;
    int xMouse;
    int yMouse;
    private int a;
    PreparedStatement ps;
    ResultSet rs;

    /**
     * Creates new form PanelLoading
     */
    public PanelLoading() {
        Settings.CheckAndWriteSettings();
        initComponents();
        SetWallpaper sw = new SetWallpaper();
        sw.SetWallpaper400x210(wall);
        Load ld = new Load();
        ld.start();
    }

    public class Load extends Thread {

        public Load() {
        }

        @Override
        public void run() {
            while (true) {
                for (int i = 0;; i++) {
                    if (i % 3 == 0) {
                        jLabel1.setText("Loading ...");
                    } else if (i % 3 == 1) {
                        jLabel1.setText("Loading .");
                    } else if (i % 3 == 2) {
                        jLabel1.setText("Loading ..");
                    }
                    try {
                        Thread.sleep(200);
                    } catch (Exception e) {
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        close = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        progressBarRound1 = new org.edisoncor.gui.progressBar.ProgressBarRound();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        wall = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon/close-blue.png"))); // NOI18N
        close.setToolTipText("Thoát");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 2, 22, 22));

        min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon/mini-blue.png"))); // NOI18N
        min.setToolTipText("Thu nhỏ");
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.setMaximumSize(new java.awt.Dimension(22, 22));
        min.setMinimumSize(new java.awt.Dimension(22, 22));
        min.setPreferredSize(new java.awt.Dimension(22, 22));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 2, 22, 22));

        progressBarRound1.setBackground(new java.awt.Color(51, 51, 51));
        progressBarRound1.setForeground(new java.awt.Color(255, 255, 255));
        progressBarRound1.setColorDeBorde(new java.awt.Color(0, 0, 0));
        progressBarRound1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(progressBarRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 400, 20));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Libary manager");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 20));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 160, 388, 30));

        wall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Screen/gray-1.png"))); // NOI18N
        getContentPane().add(wall, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 195));

        jLabel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel5MouseDragged(evt);
            }
        });
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setState(PanelLogin.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void jLabel5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel5MouseDragged

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel5MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        objTimer = new Timer(20, new ClassTimer());
        objTimer.start();
    }//GEN-LAST:event_formWindowOpened
    public class ClassTimer implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            a = progressBarRound1.getValue();

            if (a < progressBarRound1.getMaximum()) {
                a++;
                progressBarRound1.setValue(a);
                if (a == 50) {
                    con = new ConnectionDB();
                    if (con.checkConnection() == false) {
                        PanelAddDb nj = new PanelAddDb();
                        nj.setVisible(true);
                        objTimer.stop();
                        cerrar();
                    }
                }
                if (a == 70) {
                    conn = con.connect();
                    try {
                        String sql = "select count(*) from NhanVien";
                        ps = conn.prepareStatement(sql);
                        rs = ps.executeQuery();
                        while (rs.next()) {
                            if (rs.getInt(1) == 0) {
                                PanelNewNhanVienFirst pnnvf = new PanelNewNhanVienFirst();
                                pnnvf.setVisible(true);
                                objTimer.stop();
                                cerrar();
                            }
                        }
                    } catch (SQLException ex) {
                    } finally {
                        // Giải phóng tài nguyên
                        try {
                            if (rs != null) {
                                rs.close();
                            }
                        } catch (SQLException se2) {
                        }
                        try {
                            if (ps != null) {
                                ps.close();
                            }
                        } catch (SQLException se2) {
                        }
                        try {
                            if (conn != null) {
                                conn.close();
                            }
                        } catch (SQLException se) {
                        }
                    }
                }
                if (a == 90) {
                    conn = con.connect();
                    try {
                        String sql = "UPDATE BanDoc SET TrangThai = 0 WHERE NgayHetHan < CONVERT(VARCHAR(10),GETDATE(),111)";
                        ps = conn.prepareStatement(sql);
                        ps.executeQuery();
                    } catch (SQLException ex) {
                    } finally {
                        // Giải phóng tài nguyên
                        try {
                            if (rs != null) {
                                rs.close();
                            }
                        } catch (SQLException se2) {
                        }
                        try {
                            if (ps != null) {
                                ps.close();
                            }
                        } catch (SQLException se2) {
                        }
                        try {
                            if (conn != null) {
                                conn.close();
                            }
                        } catch (SQLException se) {
                        }
                    }
                }
            } else {
                Run.Login();
                objTimer.stop();
                cerrar();
            }

        }
    }

    private void cerrar() {
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel min;
    private org.edisoncor.gui.progressBar.ProgressBarRound progressBarRound1;
    private javax.swing.JLabel wall;
    // End of variables declaration//GEN-END:variables
}
